name: Spring & React - docker

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

env:
  repo: TravelMapRecord
  working-directory-be: ./travelmaprecode-be
  working-directory-fe: ./travelmaprecode-fe
  docker-image-be: pinner-be
  docker-image-fe: pinner-fe

jobs:
  changes:
    runs-on: ubuntu-22.04
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        ref: develop
        repository: PARKJINHOH/${{ env.repo }}
        token: ${{ secrets.TOKEN_GITHUB }}
        
    - name : Run Paths Filter
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          backend:
            - 'travelmaprecode-be/**'
          frontend:
            - 'travelmaprecode-fe/**'
  
  backend:
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-22.04

    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: checkout
      uses: actions/checkout@v3
      with:
        ref: develop
        repository: PARKJINHOH/${{ env.repo }}
        token: ${{ secrets.TOKEN_GITHUB }}

    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Gradle wrapper & build
      working-directory: ${{ env.working-directory-be }}
      run: |
        chmod +x ./gradlew
        ./gradlew clean bootJar

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: web docker build and push
      working-directory: ${{ env.working-directory-be }}
      run: |
        pwd
        ls -al .
        docker build --platform linux/arm64 -t ${{ secrets.DOCKER_REPO }}/${{ env.docker-image-be }} .
        docker push ${{ secrets.DOCKER_REPO }}/${{ env.docker-image-be }}
        
  backend-docker:
    needs: backend
    runs-on: ubuntu-22.04
      
    steps:
    - name: docker pull
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_IP }}
        username: ubuntu
        password: ${{ secrets.SSH_PASSWORD }}
        port: 22
        key: ${{ secrets.SSH_RSA }}
        script: |
          sudo docker pull ${{ secrets.DOCKER_REPO }}/${{ env.docker-image-be }}

  frontend:
    needs: changes
    #if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-22.04
    defaults:
        run:
            working-directory: ${{ env.working-directory-fe }}

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        ref: develop
        repository: PARKJINHOH/${{ env.repo }}
        token: ${{ secrets.TOKEN_GITHUB }}

    - uses: actions/cache@v3
      id: npm-cache
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

    - if: steps.npm-cache.outputs.cache-hit == 'true'
      run: echo 'npm cache hit!'
    - if: steps.npm-cache.outputs.cache-hit != 'true'
      run: echo 'npm cache missed!'
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2        
        
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: pwd
      run: |
        pwd
        ls -al .
        
    - name: Build and Push Docker image
      id: docker_build
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ${{ env.working-directory-fe }}/Dockerfile
        platforms: linux/amd64
        push: true
        tags: ${{ secrets.DOCKER_REPO }}/${{ env.docker-image-fe }}
